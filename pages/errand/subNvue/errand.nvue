<template>
	<div class="content" :style="{height:statusBarHeight+44+'wx'}">
		<div class="status-bar" :style="{height:statusBarHeight+'wx'}"></div>
		<div class="nav">
			<text class="icon location">{{ iconLocation }}</text>
			<text class="location-city-text">{{ city }}</text>
			<div class="input-box">
				<input class="input-box-input" placeholder="默认关键字" @focus="inputfocus" />
				<text class="icon search">{{ iconSearch }}</text>
			</div>
			<text class="icon yuyin">{{ iconYuyin }}</text>
			<text @click="toMsg" class="icon tongzhi">{{ iconTongzhi }}</text>
		</div>
	</div>
	<div>
		<div class="tabs">
			<div class="tab">
				<text v-for="(tab, tbIndex) in orderType" :key="tbIndex" 
					@click="showType(tbIndex)" 
					class="tab-text" 
					:class="[tbIndex == selectIndex ? 'tab-text-on' : '']"
				>{{ tab }}</text>
			</div>
			<div class="border" :style="{ transform: 'translateX(' + translateXW + 'px)' }"></div>
		</div>
		<slider class="slider" :auto-play="false" :infinite="false" :index="selectIndex" @change="sliderChange">
			<list class="frame" v-for="(page, index) in orderList" :key="index">
				<cell v-if="page.length == 0">
					<div class="onorder">
						<image class="onorder-image" src="https://ae01.alicdn.com/kf/HTB1FGJ7XED1gK0jSZFG762d3FXam.png"></image>
						<text class="onorder-text">没有相关订单</text>
					</div>
				</cell>
				<cell v-for="(row, rowIndex) in page" :key="rowIndex" v-if="page.length > 0">
					<div class="row">
						<text class="type">{{ typeText[row.type] }}</text>
						<div class="order-info">
							<div class="order-info-left"><image class="left-image" :src="row.img"></image></div>
							<div class="order-info-right">
								<text class="order-info-right-name">{{ row.name }}</text>
								<text class="order-info-right-spec">{{ row.spec }}</text>
								<div class="order-info-right-price-number">
									<text class="order-info-right-unit">￥</text>
									<text class="order-info-right-price">{{ row.price }}</text>
									<text class="order-info-right-multiplier">x</text>
									<text class="order-info-right-number">{{ row.numner }}</text>
								</div>
							</div>
						</div>
						<div class="detail">
							<text class="detail-number">共{{ row.numner }}件商品</text>
							<div class="detail-sum">
								<text class="detail-sum-text">合计￥</text>
								<text class="detail-sum-payment">{{ row.payment }}</text>
								<text class="detail-sum-nominal">(含运费 ￥{{ row.freight }})</text>
							</div>
						</div>
						<div class="btns">
							<div class="btns-div" v-if="row.type == 'unpaid'">
								<text class="btns-btn default" @click="cancelOrder(row)">取消订单</text>
								<text class="btns-btn pay" @click="toPayment(row)">付款</text>
							</div>
							<div class="btns-div" v-if="row.type == 'back'"><text class="btns-btn default" @click="remindDeliver(row)">提醒发货</text></div>
							<div class="btns-div" v-if="row.type == 'unreceived'">
								<text class="btns-btn default" @click="showLogistics(row)">查看物流</text>
								<text class="btns-btn pay">确认收货</text>
								<text class="btns-btn pay">我要退货</text>
							</div>
							<div class="btns-div" v-if="row.type == 'received'">
								<text class="btns-btn default">评价</text>
								<text class="btns-btn default">再次购买</text>
							</div>
							<div class="btns-div" v-if="row.type == 'completed'"><text class="btns-btn default">再次购买</text></div>
							<div class="btns-div" v-if="row.type == 'refunds'"><text class="btns-btn default">查看进度</text></div>
							<div class="btns-div" v-if="row.type == 'cancelled'"><text class="btns-btn default">已取消</text></div>
						</div>
					</div>
				</cell>
			</list>
		</slider>
	</div>
</template>
<script>
export default {
	data() {
		return {
			city: '北京',
			subNVue: uni.getCurrentSubNVue(),
			iconSearch: '\ue628',
			iconLocation: '\ue611',
			iconYuyin: '\ue64e',
			iconTongzhi: '\ue729',
			statusBarHeight:20
		};
	},
	beforeCreate() {
		const domModule = weex.requireModule('dom');
		domModule.addRule('fontFace', {
			fontFamily: 'iconfont',
			src: "url('https://at.alicdn.com/t/font_1087442_fe5vigfwr5m.ttf')"
		});
	},
	mounted() {
		this.init();
	},
	methods: {
		toMsg() {
			uni.navigateTo({
				url: '../../msg/msg'
			});
		},
		init() {
			uni.getSystemInfo({
				success: (res)=>{
					this.statusBarHeight = res.statusBarHeight;
				}
			});
			this.nVueTitle = uni.getCurrentSubNVue();
			this.nVueTitle.onMessage(res => {
				let type = res.data.type;
				switch (type) {
					case 'location':
						this.setCity(res.data.city);
						break;
					default:
						break;
				}
			});
		},
		setCity(city) {
			this.city = city;
		},
		inputfocus() {
			this.subNVue.postMessage({
				type: 'focus'
			});
		}
	}
};
</script>
<style>
.icon {
	font-family: iconfont;
	font-size: 42px;
}
.content {
	background-color: #ffffff;
	flex-direction: column;
}
.status-bar {
	flex: 1;
}

.nav {
	width: 750px;
	padding: 0 20px;
	position: relative;
	height: 88px;
	flex-direction: row;
	justify-content: center;
	align-items: center;
}
.location,
.yuyin,
.tongzhi {
	width: 60px;
	height: 88px;
	text-align: center;
	line-height: 88px;
}
.location {
	color: #ffc50a;
}
.location-city-text {
	width: 60px;
	height: 88px;
	line-height: 88px;
	font-size: 26px;
	color: #000;
}

.yuyin {
	color: #000;
}
.tongzhi {
	color: #000;
}
.input-box {
	width: 465px;
	margin-left: 5px;
	height: 60upx;
	border-radius: 60px;
	background-color: #f5f5f5;
	position: relative;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
}
.input-box-input {
	width: 330px;
	height: 60px;
	font-size: 28px;
	margin-left: 30px;
	placeholder-color: #c0c0c0;
}
.search {
	width: 60px;
	font-size: 34px;
	padding-right: 30px;
	color: #c0c0c0;
}
.tabs {
	width: 750px;
	flex-direction: row;
	flex-wrap: wrap;
	height: 80px;
	align-items: center;
	background-color: #f8f8f8;
}

.tab {
	width: 750px;
	height: 76px;
	flex-direction: row;
	flex-wrap: wrap;
}

.tab-text {
	width: 125px;
	height: 76px;
	line-height: 76px;
	text-align: center;
	font-size: 26px;
	color: #444;
}
.tab-text-on {
	color: #f06c7a;
}
.border {
	width: 75px;
	margin: 0 25px;
	height: 4px;
	background-color: #f06c7a;
	transition-property: transform;
	transition-duration: 0.3s;
	transition-delay: 0s;
	transition-timing-function: ease;
}

.slider {
	width: 750px;
	top: 80px;
	bottom: 0;
	background-color: #f3f3f3;
	position: absolute;
}

.frame {
	width: 750px;
	padding: 20px 20px;
}
.onorder {
	width: 750px;
	height: 375px;
	display: flex;
	justify-content: center;
	align-content: center;
	flex-wrap: wrap;
	flex-direction: row;
	margin-top: 50px;
}
.onorder-image {
	width: 150;
	height: 150;
	border-radius: 150;
}
.onorder-text {
	width: 750;
	height: 60px;
	font-size: 28px;
	color: #444;
	text-align: center;
	line-height: 60px;
}

.row {
	width: 710px;
	height: 400px;
	padding: 10px 20px;
	border-radius: 10px;
	background-color: #fff;
	margin-top: 20px;
	flex-direction: column;
}

.type {
	width: 710px;
	font-size: 26px;
	color: #ec652f;
	height: 50px;
	text-align: left;
}

.order-info {
	width: 710px;
	height: 188px;
	flex-direction: row;
}

.left {
	flex-shrink: 0;
	width: 188px;
	height: 188px;
}
.left-image {
	width: 188px;
	height: 188px;
	border-radius: 10px;
}

.order-info-right {
	width: 472px;
	height: 188px;
	margin-left: 10px;
	position: relative;
	flex-direction: row;
	flex-wrap: wrap;
}

.order-info-right-name {
	width: 472px;
	height: 94px;
	font-size: 28px;
	overflow: hidden;
}

.order-info-right-spec {
	color: #a7a7a7;
	font-size: 22px;
}

.order-info-right-price-number {
	position: absolute;
	bottom: 0;
	width: 472px;
	color: #333;
	justify-content: flex-end;
	flex-direction: row;
	align-items: flex-end;
}
.order-info-right-unit,
.order-info-right-multiplier {
	font-size: 20px;
}
.order-info-right-price,
.order-info-right-number {
	font-size: 24px;
}

.detail {
	width: 670px;
	height: 60px;
	justify-content: flex-end;
	align-items: flex-end;
	flex-direction: row;
}
.detail-number {
	font-size: 26px;
}
.detail-sum {
	padding: 0 8px;
	flex-direction: row;
	align-items: flex-end;
}
.detail-sum-text {
	font-size: 26px;
}
.detail-sum-payment {
	font-size: 30px;
}
.detail-sum-nominal {
	font-size: 26px;
}
.btns {
	width: 670px;
	height: 80px;
	flex-direction: row;
	align-items: center;
}
.btns-div {
	width: 670px;
	height: 50px;
	justify-content: flex-end;
	flex-direction: row;
}
.btns-btn {
	min-width: 120px;
	height: 50px;
	padding: 0 20px;
	border-radius: 50px;
	line-height: 50px;
	text-align: center;
	font-size: 28px;
	margin-left: 20px;
	border-style: solid;
	border-width: 1px;
	border-color: #ccc;
}

.default {
	border-color: #ccc;
	color: #666;
}

.pay {
	border-color: #ec652f;
	color: #ec652f;
}
</style>
